pip uninstall notebook jupyter_contrib_nbextensions

conda remove -n tf_env --all -y

# DL, ML environment

# Create new environment with Python 3.9
conda create -n tf_env python=3.9 -y
conda activate tf_env

# Add necessary channels
conda config --add channels conda-forge
conda config --add channels pytorch
conda config --set channel_priority flexible

--if needed upgrade pip
pip install --upgrade pip

[1]
# Install CUDA toolkit and cuDNN
conda install -c conda-forge cudatoolkit=11.8 
conda install -c conda-forge cudnn # Install latest compatible cuDNN # cudnn=8.4.1.50
# conda install -c nvidia cuda-cudnn # for conda
pip install tensorflow==2.14.1

or
[2] best
# First remove current installations
pip uninstall tensorflow tensorflow-gpu nvidia-cudnn-cu11 -y
pip cache purge

# Install TensorFlow 2.12.0 which is compatible with cuDNN 8.4.1
pip install tensorflow==2.12.0
pip install nvidia-cudnn-cu11==8.4.1.50

# Install cuDNN 8.6.0.163 which is compatible with TensorFlow 2.14.1
pip install nvidia-cudnn-cu11==8.6.0.163 # working in tf_env
pip install tensorflow==2.14.1

# Install PyTorch with CUDA support
conda install pytorch torchvision torchaudio pytorch-cuda=12.1 -c pytorch -c nvidia

# Install TensorFlow (compatible with CUDA 11.8)
# conda install -c conda-forge tensorflow=2.10.0
conda install scikit-learn

# Install Jupyter and other packages
# conda install -c conda-forge jupyterlab jupyterlab-widgets ipywidgets
pip install jupyter notebook jupyterlab ipywidgets jupyterlab-widgets
# conda install -c conda-forge ipywidgets
conda install -c conda-forge scikit-learn pandas numpy scipy matplotlib seaborn psutil mayavi
conda install -c conda-forge plotly bokeh holoviews
pip install opencv-python
conda install -c conda-forge opencv pillow tqdm h5py

# conda install -c conda-forge pandas=2.1.0 # Install newer pandas first conda install -c conda-forge dask # Then install dask conda install -c conda-forge datashader # Then install datashader

pip install panel hvplot pydicom

#5 Install Jupyter extensions
# pip install notebook==6.5.5
pip install jupyter_contrib_nbextensions
pip install jupyter_nbextensions_configurator
# Enable the extensions
jupyter contrib nbextension install --user
jupyter nbextensions_configurator enable --user
# Enable widgets in Jupyter
jupyter nbextension enable --py widgetsnbextension

#4 Install data processing utilities
conda install -c conda-forge pandas-profiling
conda install -c conda-forge opencv pillow

—————
# Create new environment with Python 3.9
conda create -n dl_env python=3.9
conda activate dl_env

# Install CUDA and cuDNN
# conda install -c nvidia cuda-toolkit=12.2
# conda install -c nvidia cudnn=8.9.2

# Install PyTorch with CUDA 12.2 support
# conda install pytorch torchvision torchaudio pytorch-cuda=12.2 -c pytorch -c nvidia

# Install TensorFlow and related packages
# conda install -c conda-forge tensorflow=2.12.0
# conda install -c conda-forge tensorflow-hub
# conda install -c conda-forge tensorflow-datasets

# Install Jupyter environments
# conda install -c conda-forge jupyterlab=4.0.7
# conda install -c conda-forge notebook=7.0.6
# conda install -c conda-forge ipywidgets=8.1.1
# conda install -c conda-forge jupyterlab-widgets=3.0.9

# Install common ML/DL libraries
# conda install -c conda-forge scikit-learn=1.3.2
# conda install -c conda-forge pandas=2.1.3
# conda install -c conda-forge numpy=1.24.3
# conda install -c conda-forge scipy=1.11.3
# conda install -c conda-forge matplotlib=3.8.2
# conda install -c conda-forge seaborn=0.13.0

# Install visualization tools
# conda install -c conda-forge plotly=5.18.0
# conda install -c conda-forge bokeh=3.3.1
# conda install -c conda-forge holoviews=1.18.1
conda install -c conda-forge graphviz=8.1.0
conda install -c conda-forge pydot=1.4.2
# Then install vtk
conda install -c anaconda vtk

# Install additional useful packages
# conda install -c conda-forge opencv=4.8.1
# conda install -c conda-forge pillow=10.1.0
# conda install -c conda-forge tqdm=4.66.1
# conda install -c conda-forge h5py=3.10.0
# conda install -c conda-forge pandas-profiling=3.6.6
conda install -c conda-forge scikit-image=0.22.0

# Install deep learning visualization tools
conda install -c conda-forge tensorboard=2.12.3
pip install keras-visualizer==3.1.2
pip install keras-visualizer # for latest version


=============================================================

# Pytorch Environment

=============================================================

# Remove existing environment if needed
conda env remove -n pyt_env

# Clean conda cache
conda clean --all --yes

# Create new environment
conda create -n pyt_env python=3.9
conda activate pyt_env

# Install PyTorch and CUDA
conda install -c pytorch -c nvidia # pytorch-cuda=12.1

# Uninstall current PyTorch completely
# pip uninstall -y torch torchvision torchaudio

conda config --add channels conda-forge
conda config --add channels pytorch
conda config --set channel_priority flexible

# Install data science and visualization packages
conda install -c conda-forge scikit-learn pandas scipy matplotlib seaborn psutil
conda install -c conda-forge plotly bokeh holoviews
conda install -c conda-forge opencv pillow tqdm h5py
conda install -c conda-forge pandas-profiling
conda install -c conda-forge graphviz=8.1.0
conda install -c conda-forge pydot=1.4.2
conda install -c anaconda vtk
conda install -c conda-forge scikit-image=0.22.0
conda install -c conda-forge tensorboard=2.12.3
conda install -c conda-forge mayavi

# Install Jupyter and related tools using pip
pip install numpy==1.23.5
pip install torch==2.6.0 torchvision==0.21.0 torchaudio==2.6.0 --index-url https://download.pytorch.org/whl/cu124  # PyTorch, torchvision, and torchaudio
pip install jupyter notebook jupyterlab ipywidgets jupyterlab-widgets
pip install opencv-python
pip install einops
pip install panel hvplot pydicom
pip install jupyter_contrib_nbextensions
pip install jupyter_nbextensions_configurator
pip install keras-visualizer==3.1.2
pip install keras-visualizer  # for latest version

# Set up Jupyter extensions
jupyter contrib nbextension install --user
jupyter nbextensions_configurator enable --user
jupyter nbextension enable --py widgetsnbextension

python -c "import torch; print('PyTorch version:', torch.__version__); print('CUDA available:', torch.cuda.is_available()); print('CUDA version:', torch.version.cuda if torch.cuda.is_available() else 'NA'); print('GPU device count:', torch.cuda.device_count())"

=============================================================

# Set env path
nano ~/.bashrc
# CUDA and TensorFlow configuration
export LD_LIBRARY_PATH=/usr/lib/cuda/lib64:$LD_LIBRARY_PATH
export CUDA_HOME=/usr/lib/cuda
export XLA_FLAGS=--xla_gpu_cuda_data_dir=/usr/lib/cuda

Save (Ctrl + O, then Enter) and exit (Ctrl + X)

source ~/.bashrc # Source your .bashrc

conda search -c conda-forge cudnn
pip index versions nvidia-cudnn-cu11


# Create a jupyter kernel for your environment
python -m ipykernel install --user --name deeplearn --display-name "Python (deeplearn)"

# Create requirements file
pip freeze > requirements.txt 
conda env export > environment.yml

--install from requirements file
pip install -r requirements.txt
